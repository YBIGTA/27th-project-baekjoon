version: "3.9"

services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      MYSQL_HOST: "${MYSQL_HOST}"
      MYSQL_PORT: "3306"
      MYSQL_DB: "${MYSQL_DB}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
      JWT_ALGORITHM: "${JWT_ALGORITHM}"
      ACCESS_TOKEN_EXPIRE_MINUTES: "${ACCESS_TOKEN_EXPIRE_MINUTES}"
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env

  ai-server:
    build:
      context: ./ai-server
      dockerfile: Dockerfile
    container_name: ai-server
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
      - ai-server
      - code-runner-api

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  code-runner-api:
    build: ./code-runner
    container_name: code-runner-api
    command: uvicorn app.api:app --host 0.0.0.0 --port 8000
    ports:
      - "8001:8000"
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  code-runner-worker:
    build: ./code-runner
    runtime: kata
    container_name: code-runner-worker
    command: celery -A app.worker worker --loglevel=info --concurrency=50
    deploy:
      resources:
        limits:
          cpus: '16'
          memory: 7G
    depends_on:
      - redis
    restart: unless-stopped